/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface.Patient;

import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.InputVerifier;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
//import model.Patient;
import model.Person;
import model.PersonDirectory;

/**
 *
 * @author adity
 */
public class ManagePatientsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePatientsJPanel
     */
    
    private PersonDirectory personDirectory;
    private JPanel workAreaJPanel;
    
    
    
    public ManagePatientsJPanel(JPanel workAreaJPanel, PersonDirectory personDirectory) {
        initComponents();
        this.personDirectory= personDirectory;
        this.workAreaJPanel = workAreaJPanel;
        populatePersonTable(personDirectory.getPersonDirectory());
        
    }
    
        
//    private void populatePatientsTable(ArrayList<Person> personList) {
//        DefaultTableModel model = (DefaultTableModel) tblManagePatients.getModel();
//        model.setRowCount(0);
//        if(personList.isEmpty())
//        {
//            JOptionPane.showMessageDialog(this, "No Persons found. Please add Persons",
//                    "Warning", JOptionPane.INFORMATION_MESSAGE);
//            return;
//        }
//        for (Person person : personList) {
//            Object[] row = new Object[7];
//            row[0] = person;
//            row[1]= person.getAge();
//            row[2] = person.getGender();
//            row[3] = person.getHouse();
//            row[4] = person.getCommunity();
//            row[5] = person.getCity();
//            row[6] = person.getZipcode();
//            
//            
//            
////            if(person.getPatient()!=null)
////            {
////                row[2] = person.getPatient().getPatientID();
////            }
////            else
////            {
////                row[2] = "Patient Not Created";
////            }
//            
//            model.addRow(row);
//        }
//    }
//    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblManagePatients = new javax.swing.JTable();
        btnBack6 = new javax.swing.JButton();
        btnSearchPatient = new javax.swing.JButton();
        txtSearchPpatient = new javax.swing.JTextField();
        btnRefresh2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Patients");

        tblManagePatients.setBackground(new java.awt.Color(204, 204, 204));
        tblManagePatients.setFont(new java.awt.Font("Gill Sans MT", 1, 12)); // NOI18N
        tblManagePatients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient Name", "Age", "Gender", "House", "Community", "City", "Zip Code"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblManagePatients);
        if (tblManagePatients.getColumnModel().getColumnCount() > 0) {
            tblManagePatients.getColumnModel().getColumn(0).setResizable(false);
            tblManagePatients.getColumnModel().getColumn(1).setResizable(false);
            tblManagePatients.getColumnModel().getColumn(2).setResizable(false);
        }

        btnBack6.setBackground(new java.awt.Color(0, 0, 0));
        btnBack6.setFont(new java.awt.Font("Gill Sans MT", 1, 12)); // NOI18N
        btnBack6.setForeground(new java.awt.Color(153, 255, 255));
        btnBack6.setText("<< Back");
        btnBack6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 255, 255), 1, true));
        btnBack6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack6ActionPerformed(evt);
            }
        });

        btnSearchPatient.setBackground(new java.awt.Color(0, 0, 0));
        btnSearchPatient.setFont(new java.awt.Font("Gill Sans MT", 1, 12)); // NOI18N
        btnSearchPatient.setForeground(new java.awt.Color(153, 255, 255));
        btnSearchPatient.setText("Search Patient ");
        btnSearchPatient.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 255, 255), 1, true));
        btnSearchPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchPatientActionPerformed(evt);
            }
        });

        txtSearchPpatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchPpatientActionPerformed(evt);
            }
        });

        btnRefresh2.setBackground(new java.awt.Color(0, 0, 0));
        btnRefresh2.setFont(new java.awt.Font("Gill Sans MT", 1, 12)); // NOI18N
        btnRefresh2.setForeground(new java.awt.Color(153, 255, 255));
        btnRefresh2.setText("Refresh");
        btnRefresh2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 255, 255), 1, true));
        btnRefresh2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefresh2ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Gill Sans MT", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(153, 255, 255));
        jButton1.setText("Click here to check Patient Vital Signs");
        jButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 255, 255), 1, true));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(27, 27, 27)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnSearchPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtSearchPpatient, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnRefresh2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(btnBack6, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSearchPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSearchPpatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(btnRefresh2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(btnBack6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchPpatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchPpatientActionPerformed
        // TODO add your handling code here:
        String key= txtSearchPpatient.getText();
        if(key.length()==0)
        {
            JOptionPane.showMessageDialog(this, "Please enter key.",
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        ArrayList<Person> searchPersons;
        searchPersons=personDirectory.searchPerson(key);
        populatePersonTable(searchPersons);
    }//GEN-LAST:event_txtSearchPpatientActionPerformed

    private void btnRefresh2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefresh2ActionPerformed
        // TODO add your handling code here:
        txtSearchPpatient.setText("");
        populatePersonTable(personDirectory.getPersonDirectory());
   
    }//GEN-LAST:event_btnRefresh2ActionPerformed

    private void btnBack6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack6ActionPerformed
        // TODO add your handling code here:
        workAreaJPanel.remove(this);
        CardLayout layout = (CardLayout) workAreaJPanel.getLayout();
        layout.previous(workAreaJPanel);
        
    }//GEN-LAST:event_btnBack6ActionPerformed

    private void btnSearchPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchPatientActionPerformed
        // TODO add your handling code here:
        
//        String key= txtSearchPpatient.getText().trim();
//        if(key.length()==0)
//        {
//            JOptionPane.showMessageDialog(this, "Please enter key.", "Error",
//                    JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//        ArrayList<Person> searchPatients;
//        searchPatients=personDirectory.searchPatient(key);
//        populatePatientsTable(searchPatients);
    }//GEN-LAST:event_btnSearchPatientActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ManagePatientVitalSignJPanel mvsJPanel = new ManagePatientVitalSignJPanel(workAreaJPanel, personDirectory);
        workAreaJPanel.add("mvsJPanel", mvsJPanel);
        CardLayout layout=(CardLayout) workAreaJPanel.getLayout();
        layout.next(workAreaJPanel);
        
     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void populatePersonTable(ArrayList<Person> personsList) {
        DefaultTableModel model = (DefaultTableModel) tblManagePatients.getModel();
        model.setRowCount(0);
        if(personsList.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "No Person's found. Please add"
                    + " Person's", "Warning", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        for (Person person : personsList) {
            Object[] row = new Object[8];
            row[0] = person;
            row[1]= person.getAge();
            row[2]= person.getGender();
            row[3]= person.getHouse();
            row[4]= person.getCommunity();
            row[5]= person.getCity();
            row[6]= person.getZipcode();
            row[7]= person.getPersonId();
           
            model.addRow(row);
        }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack6;
    private javax.swing.JButton btnRefresh2;
    private javax.swing.JButton btnSearchPatient;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblManagePatients;
    private javax.swing.JTextField txtSearchPpatient;
    // End of variables declaration//GEN-END:variables
}
